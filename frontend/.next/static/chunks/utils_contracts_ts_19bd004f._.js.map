{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Desktop/writetoearn_web3/frontend/utils/contracts.ts"],"sourcesContent":["import { ethers } from \"ethers\";\n\nexport const CONTRACTS = {\n  token: {\n    address: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\n    abi: [\n      // ERC20 mint\n      \"function mint(address to, uint256 amount) external\"\n    ]\n  },\n  nft: {\n    address: \"0x5fbdb2315678afecb367f032d93f642f64180aa3\",\n    abi: [\n      \"function mint(address to, string memory tokenURI) external returns (uint256)\",\n      \"function ownerOf(uint256 tokenId) view returns (address)\",\n      \"function tokenURI(uint256 tokenId) view returns (string)\"\n    ]\n  },\n  likeReward: {\n    address: \"0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0\",\n    abi: [\n      \"function like(uint256 tokenId) external\",\n      \"function rewardAuthor(uint256 tokenId) external\",\n      \"function likes(uint256 tokenId) view returns (uint256)\"\n    ]\n  }\n};\n\nexport function getContract(name: keyof typeof CONTRACTS, signerOrProvider: ethers.Signer | ethers.providers.Provider) {\n  const { address, abi } = CONTRACTS[name];\n  return new ethers.Contract(address, abi, signerOrProvider);\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,YAAY;IACvB,OAAO;QACL,SAAS;QACT,KAAK;YACH,aAAa;YACb;SACD;IACH;IACA,KAAK;QACH,SAAS;QACT,KAAK;YACH;YACA;YACA;SACD;IACH;IACA,YAAY;QACV,SAAS;QACT,KAAK;YACH;YACA;YACA;SACD;IACH;AACF;AAEO,SAAS,YAAY,IAA4B,EAAE,gBAA2D;IACnH,MAAM,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,SAAS,CAAC,KAAK;IACxC,OAAO,IAAI,4KAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,SAAS,KAAK;AAC3C","debugId":null}}]
}