(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([typeof document === "object" ? document.currentScript : undefined, {

"[project]/node_modules/ipfs-http-client/src/lib/core.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/* eslint-env browser */ __turbopack_context__.s({
    "Client": (()=>Client),
    "HTTPError": (()=>HTTPError),
    "errorHandler": (()=>errorHandler)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-utils/src/env.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$parse$2d$duration$2f$index$2e$mjs__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/parse-duration/index.mjs [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$logger$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/logger/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-utils/src/http.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$merge$2d$options$2f$index$2e$mjs__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/merge-options/index.mjs [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$to$2d$url$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/to-url-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$agent$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/agent.browser.js [client] (ecmascript)");
;
;
;
;
;
;
;
;
const log = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$logger$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["logger"])('ipfs-http-client:lib:error-handler');
const merge = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$merge$2d$options$2f$index$2e$mjs__$5b$client$5d$__$28$ecmascript$29$__["default"].bind({
    ignoreUndefined: true
});
const DEFAULT_PROTOCOL = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isBrowser"] || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isWebWorker"] ? location.protocol : 'http';
const DEFAULT_HOST = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isBrowser"] || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isWebWorker"] ? location.hostname : 'localhost';
const DEFAULT_PORT = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isBrowser"] || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isWebWorker"] ? location.port : '5001';
/**
 * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions
 * @typedef {import('../types').Options} Options
 * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr
 */ /**
 * @param {Options|URL|Multiaddr|string} [options]
 * @returns {Options}
 */ const normalizeOptions = (options = {})=>{
    let url;
    /** @type {Options} */ let opts = {};
    let agent;
    if (typeof options === 'string' || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isMultiaddr"])(options)) {
        url = new URL((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$to$2d$url$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlString"])(options));
    } else if (options instanceof URL) {
        url = options;
    } else if (typeof options.url === 'string' || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["isMultiaddr"])(options.url)) {
        url = new URL((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$to$2d$url$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlString"])(options.url));
        opts = options;
    } else if (options.url instanceof URL) {
        url = options.url;
        opts = options;
    } else {
        opts = options || {};
        const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '');
        const host = (opts.host || DEFAULT_HOST).split(':')[0];
        const port = opts.port || DEFAULT_PORT;
        url = new URL(`${protocol}://${host}:${port}`);
    }
    if (opts.apiPath) {
        url.pathname = opts.apiPath;
    } else if (url.pathname === '/' || url.pathname === undefined) {
        url.pathname = 'api/v0';
    }
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$env$2e$js__$5b$client$5d$__$28$ecmascript$29$__["isNode"]) {
        const Agent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$agent$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(url);
        agent = opts.agent || new Agent({
            keepAlive: true,
            // Similar to browsers which limit connections to six per host
            maxSockets: 6
        });
    }
    return {
        ...opts,
        host: url.host,
        protocol: url.protocol.replace(':', ''),
        port: Number(url.port),
        apiPath: url.pathname,
        url,
        agent
    };
};
const errorHandler = async (response)=>{
    let msg;
    try {
        if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {
            const data = await response.json();
            log(data);
            msg = data.Message || data.message;
        } else {
            msg = await response.text();
        }
    } catch (/** @type {any} */ err) {
        log('Failed to parse error response', err);
        // Failed to extract/parse error message from response
        msg = err.message;
    }
    /** @type {Error} */ let error = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"].HTTPError(response);
    if (msg) {
        // This is what rs-ipfs returns where there's a timeout
        if (msg.includes('deadline has elapsed')) {
            error = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"].TimeoutError();
        }
        // This is what go-ipfs returns where there's a timeout
        if (msg && msg.includes('context deadline exceeded')) {
            error = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"].TimeoutError();
        }
    }
    // This also gets returned
    if (msg && msg.includes('request timed out')) {
        error = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"].TimeoutError();
    }
    // If we managed to extract a message from the response, use it
    if (msg) {
        error.message = msg;
    }
    throw error;
};
const KEBAB_REGEX = /[A-Z\u00C0-\u00D6\u00D8-\u00DE]/g;
/**
 * @param {string} str
 */ const kebabCase = (str)=>{
    return str.replace(KEBAB_REGEX, function(match) {
        return '-' + match.toLowerCase();
    });
};
/**
 * @param {string | number} value
 */ const parseTimeout = (value)=>{
    return typeof value === 'string' ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$parse$2d$duration$2f$index$2e$mjs__$5b$client$5d$__$28$ecmascript$29$__["default"])(value) : value;
};
class Client extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"] {
    /**
   * @param {Options|URL|Multiaddr|string} [options]
   */ constructor(options = {}){
        const opts = normalizeOptions(options);
        super({
            timeout: parseTimeout(opts.timeout || 0) || undefined,
            headers: opts.headers,
            base: `${opts.url}`,
            handleError: errorHandler,
            transformSearchParams: (search)=>{
                const out = new URLSearchParams();
                for (const [key, value] of search){
                    if (value !== 'undefined' && value !== 'null' && key !== 'signal') {
                        out.append(kebabCase(key), value);
                    }
                    // @ts-expect-error server timeouts are strings
                    if (key === 'timeout' && !isNaN(value)) {
                        out.append(kebabCase(key), value);
                    }
                }
                return out;
            },
            // @ts-expect-error this can be a https agent or a http agent
            agent: opts.agent
        });
        // @ts-expect-error - cannot delete no-optional fields
        delete this.get;
        // @ts-expect-error - cannot delete no-optional fields
        delete this.put;
        // @ts-expect-error - cannot delete no-optional fields
        delete this.delete;
        // @ts-expect-error - cannot delete no-optional fields
        delete this.options;
        const fetch = this.fetch;
        /**
     * @param {string | Request} resource
     * @param {HTTPOptions} options
     */ this.fetch = (resource, options = {})=>{
            if (typeof resource === 'string' && !resource.startsWith('/')) {
                resource = `${opts.url}/${resource}`;
            }
            return fetch.call(this, resource, merge(options, {
                method: 'POST'
            }));
        };
    }
}
const HTTPError = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"].HTTPError;
}}),
"[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/* eslint-env browser */ __turbopack_context__.s({
    "configure": (()=>configure)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$core$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/core.js [client] (ecmascript)");
;
const configure = (fn)=>{
    return (options)=>{
        return fn(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$core$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Client"](options), options);
    };
};
}}),
"[project]/node_modules/ipfs-http-client/src/lib/mode-to-string.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @param {number | string | undefined} mode
 */ __turbopack_context__.s({
    "modeToString": (()=>modeToString)
});
function modeToString(mode) {
    if (mode == null) {
        return undefined;
    }
    if (typeof mode === 'string') {
        return mode;
    }
    return mode.toString(8).padStart(4, '0');
}
}}),
"[project]/node_modules/ipfs-http-client/src/lib/parse-mtime.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "parseMtime": (()=>parseMtime)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/err-code/index.js [client] (ecmascript)");
;
function parseMtime(input) {
    if (input == null) {
        return undefined;
    }
    /** @type {{ secs: number, nsecs?: number } | undefined} */ let mtime;
    // { secs, nsecs }
    if (input.secs != null) {
        mtime = {
            secs: input.secs,
            nsecs: input.nsecs
        };
    }
    // UnixFS TimeSpec
    if (input.Seconds != null) {
        mtime = {
            secs: input.Seconds,
            nsecs: input.FractionalNanoseconds
        };
    }
    // process.hrtime()
    if (Array.isArray(input)) {
        mtime = {
            secs: input[0],
            nsecs: input[1]
        };
    }
    // Javascript Date
    if (input instanceof Date) {
        const ms = input.getTime();
        const secs = Math.floor(ms / 1000);
        mtime = {
            secs: secs,
            nsecs: (ms - secs * 1000) * 1000
        };
    }
    /*
  TODO: https://github.com/ipfs/aegir/issues/487

  // process.hrtime.bigint()
  if (input instanceof BigInt) {
    const secs = input / BigInt(1e9)
    const nsecs = input - (secs * BigInt(1e9))

    mtime = {
      secs: parseInt(secs.toString()),
      nsecs: parseInt(nsecs.toString())
    }
  }
  */ if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {
        return undefined;
    }
    if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {
        throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS');
    }
    return mtime;
}
}}),
"[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "toUrlSearchParams": (()=>toUrlSearchParams)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$mode$2d$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/mode-to-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$parse$2d$mtime$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/parse-mtime.js [client] (ecmascript)");
;
;
function toUrlSearchParams({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {
    if (searchParams) {
        options = {
            ...options,
            ...searchParams
        };
    }
    if (hashAlg) {
        options.hash = hashAlg;
    }
    if (mtime != null) {
        mtime = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$parse$2d$mtime$2e$js__$5b$client$5d$__$28$ecmascript$29$__["parseMtime"])(mtime);
        options.mtime = mtime.secs;
        options.mtimeNsecs = mtime.nsecs;
    }
    if (mode != null) {
        options.mode = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$mode$2d$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["modeToString"])(mode);
    }
    if (options.timeout && !isNaN(options.timeout)) {
        // server API expects timeouts as strings
        options.timeout = `${options.timeout}ms`;
    }
    if (arg === undefined || arg === null) {
        arg = [];
    } else if (!Array.isArray(arg)) {
        arg = [
            arg
        ];
    }
    const urlSearchParams = new URLSearchParams(options);
    arg.forEach((/** @type {any} */ arg)=>urlSearchParams.append('arg', arg));
    return urlSearchParams;
}
}}),
"[project]/node_modules/ipfs-http-client/src/bitswap/wantlist.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createWantlist": (()=>createWantlist)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createWantlist = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BitswapAPI["wantlist"]}
   */ async function wantlist(options = {}) {
        const res = await (await api.post('bitswap/wantlist', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        })).json();
        return (res.Keys || []).map((/** @type {{ '/': string }} */ k)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(k['/']));
    }
    return wantlist;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createWantlistForPeer": (()=>createWantlistForPeer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createWantlistForPeer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BitswapAPI["wantlistForPeer"]}
   */ async function wantlistForPeer(peerId, options = {}) {
        const res = await (await api.post('bitswap/wantlist', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                ...options,
                peer: peerId.toString()
            }),
            headers: options.headers
        })).json();
        return (res.Keys || []).map((/** @type {{ '/': string }} */ k)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(k['/']));
    }
    return wantlistForPeer;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bitswap/stat.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStat": (()=>createStat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/peer-id/dist/src/index.js [client] (ecmascript)");
;
;
;
;
const createStat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BitswapAPI["stat"]}
   */ async function stat(options = {}) {
        const res = await api.post('bitswap/stat', {
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            signal: options.signal,
            headers: options.headers
        });
        return toCoreInterface(await res.json());
    }
    return stat;
});
/**
 * @param {any} res
 */ function toCoreInterface(res) {
    return {
        provideBufLen: res.ProvideBufLen,
        wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(k['/'])),
        peers: (res.Peers || []).map((/** @type {string} */ str)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(str)),
        blocksReceived: BigInt(res.BlocksReceived),
        dataReceived: BigInt(res.DataReceived),
        blocksSent: BigInt(res.BlocksSent),
        dataSent: BigInt(res.DataSent),
        dupBlksReceived: BigInt(res.DupBlksReceived),
        dupDataReceived: BigInt(res.DupDataReceived)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/bitswap/unwant.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createUnwant": (()=>createUnwant)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createUnwant = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BitswapAPI["unwant"]}
   */ async function unwant(cid, options = {}) {
        const res = await api.post('bitswap/unwant', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: cid.toString(),
                ...options
            }),
            headers: options.headers
        });
        return res.json();
    }
    return unwant;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bitswap/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createBitswap": (()=>createBitswap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$wantlist$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/wantlist.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$wantlist$2d$for$2d$peer$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/stat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$unwant$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/unwant.js [client] (ecmascript)");
;
;
;
;
function createBitswap(config) {
    return {
        wantlist: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$wantlist$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createWantlist"])(config),
        wantlistForPeer: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$wantlist$2d$for$2d$peer$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createWantlistForPeer"])(config),
        unwant: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$unwant$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createUnwant"])(config),
        stat: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/block/get.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGet": (()=>createGet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createGet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BlockAPI["get"]}
   */ async function get(cid, options = {}) {
        const res = await api.post('block/get', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: cid.toString(),
                ...options
            }),
            headers: options.headers
        });
        return new Uint8Array(await res.arrayBuffer());
    }
    return get;
});
}}),
"[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "abortSignal": (()=>abortSignal)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$any$2d$signal$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/any-signal/index.js [client] (ecmascript)");
;
/**
 * @param {any[]} signals
 * @returns {AbortSignal[]}
 */ function filter(signals) {
    return signals.filter(Boolean);
}
function abortSignal(...signals) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$any$2d$signal$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["anySignal"])(filter(signals));
}
}}),
"[project]/node_modules/ipfs-http-client/src/block/put.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPut": (()=>createPut)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
const createPut = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BlockAPI["put"]}
   */ async function put(data, options = {}) {
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        let res;
        try {
            const response = await api.post('block/put', {
                signal: signal,
                searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
                ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                    data
                ], controller, options.headers)
            });
            res = await response.json();
        } catch (/** @type {any} */ err) {
            // Retry with "protobuf"/"cbor" format for go-ipfs
            // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved
            if (options.format === 'dag-pb') {
                return put(data, {
                    ...options,
                    format: 'protobuf'
                });
            } else if (options.format === 'dag-cbor') {
                return put(data, {
                    ...options,
                    format: 'cbor'
                });
            }
            throw err;
        }
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(res.Key);
    }
    return put;
});
}}),
"[project]/node_modules/ipfs-http-client/src/block/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createRm = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BlockAPI["rm"]}
   */ async function* rm(cid, options = {}) {
        if (!Array.isArray(cid)) {
            cid = [
                cid
            ];
        }
        const res = await api.post('block/rm', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: cid.map((cid)=>cid.toString()),
                'stream-channels': true,
                ...options
            }),
            headers: options.headers
        });
        for await (const removed of res.ndjson()){
            yield toCoreInterface(removed);
        }
    }
    return rm;
});
/**
 * @param {*} removed
 */ function toCoreInterface(removed) {
    /** @type {RmResult} */ const out = {
        cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(removed.Hash)
    };
    if (removed.Error) {
        out.error = new Error(removed.Error);
    }
    return out;
}
}}),
"[project]/node_modules/ipfs-http-client/src/block/stat.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStat": (()=>createStat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createStat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BlockAPI["stat"]}
   */ async function stat(cid, options = {}) {
        const res = await api.post('block/stat', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: cid.toString(),
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return {
            cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(data.Key),
            size: data.Size
        };
    }
    return stat;
});
}}),
"[project]/node_modules/ipfs-http-client/src/block/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createBlock": (()=>createBlock)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/put.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/rm.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/stat.js [client] (ecmascript)");
;
;
;
;
function createBlock(config) {
    return {
        get: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(config),
        put: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPut"])(config),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(config),
        stat: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/bootstrap/add.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAdd": (()=>createAdd)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
;
;
;
const createAdd = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BootstrapAPI["add"]}
   */ async function add(addr, options = {}) {
        const res = await api.post('bootstrap/add', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: addr,
                ...options
            }),
            headers: options.headers
        });
        const { Peers } = await res.json();
        return {
            Peers: Peers.map((/** @type {string} */ ma)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(ma))
        };
    }
    return add;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bootstrap/clear.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createClear": (()=>createClear)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
;
;
;
const createClear = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BootstrapAPI["clear"]}
   */ async function clear(options = {}) {
        const res = await api.post('bootstrap/rm', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                ...options,
                all: true
            }),
            headers: options.headers
        });
        const { Peers } = await res.json();
        return {
            Peers: Peers.map((/** @type {string} */ ma)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(ma))
        };
    }
    return clear;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bootstrap/list.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createList": (()=>createList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
;
;
;
const createList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BootstrapAPI["list"]}
   */ async function list(options = {}) {
        const res = await api.post('bootstrap/list', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        const { Peers } = await res.json();
        return {
            Peers: Peers.map((/** @type {string} */ ma)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(ma))
        };
    }
    return list;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bootstrap/reset.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createReset": (()=>createReset)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
;
;
;
const createReset = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BootstrapAPI["reset"]}
   */ async function reset(options = {}) {
        const res = await api.post('bootstrap/add', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                ...options,
                default: true
            }),
            headers: options.headers
        });
        const { Peers } = await res.json();
        return {
            Peers: Peers.map((/** @type {string} */ ma)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(ma))
        };
    }
    return reset;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bootstrap/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
;
;
;
const createRm = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {BootstrapAPI["rm"]}
   */ async function rm(addr, options = {}) {
        const res = await api.post('bootstrap/rm', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: addr,
                ...options
            }),
            headers: options.headers
        });
        const { Peers } = await res.json();
        return {
            Peers: Peers.map((/** @type {string} */ ma)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(ma))
        };
    }
    return rm;
});
}}),
"[project]/node_modules/ipfs-http-client/src/bootstrap/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createBootstrap": (()=>createBootstrap)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/add.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$clear$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/clear.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$list$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/list.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$reset$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/reset.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/rm.js [client] (ecmascript)");
;
;
;
;
;
function createBootstrap(config) {
    return {
        add: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAdd"])(config),
        clear: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$clear$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createClear"])(config),
        list: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$list$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createList"])(config),
        reset: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$reset$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createReset"])(config),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/config/profiles/apply.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createApply": (()=>createApply)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createApply = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ConfigProfilesAPI["apply"]}
   */ async function apply(profile, options = {}) {
        const res = await api.post('config/profile/apply', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: profile,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return {
            original: data.OldCfg,
            updated: data.NewCfg
        };
    }
    return apply;
});
}}),
"[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * Convert object properties to camel case.
 * NOT recursive!
 * e.g.
 * AgentVersion => agentVersion
 * ID => id
 *
 * @param {Record<string, any>} obj
 */ __turbopack_context__.s({
    "objectToCamel": (()=>objectToCamel)
});
function objectToCamel(obj) {
    if (obj == null) {
        return obj;
    }
    const caps = /^[A-Z]+$/;
    /** @type {Record<string, any>} */ const output = {};
    return Object.keys(obj).reduce((camelObj, k)=>{
        if (caps.test(k)) {
            camelObj[k.toLowerCase()] = obj[k];
        } else if (caps.test(k[0])) {
            camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k];
        } else {
            camelObj[k] = obj[k];
        }
        return camelObj;
    }, output);
}
}}),
"[project]/node_modules/ipfs-http-client/src/config/profiles/list.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createList": (()=>createList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ConfigProfilesAPI["list"]}
   */ async function list(options = {}) {
        const res = await api.post('config/profile/list', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        const data = await res.json();
        return data.map((/** @type {Record<string, any>} */ profile)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(profile));
    }
    return list;
});
}}),
"[project]/node_modules/ipfs-http-client/src/config/profiles/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createProfiles": (()=>createProfiles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$profiles$2f$apply$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/profiles/apply.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$profiles$2f$list$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/profiles/list.js [client] (ecmascript)");
;
;
function createProfiles(config) {
    return {
        apply: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$profiles$2f$apply$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createApply"])(config),
        list: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$profiles$2f$list$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createList"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/config/get.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGet": (()=>createGet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createGet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ConfigAPI["get"]}
   */ const get = async (key, options = {})=>{
        if (!key) {
            throw new Error('key argument is required');
        }
        const res = await api.post('config', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: key,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return data.Value;
    };
    return get;
});
}}),
"[project]/node_modules/ipfs-http-client/src/config/get-all.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGetAll": (()=>createGetAll)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createGetAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ConfigAPI["getAll"]}
   */ const getAll = async (options = {})=>{
        const res = await api.post('config/show', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return data;
    };
    return getAll;
});
}}),
"[project]/node_modules/ipfs-http-client/src/config/replace.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createReplace": (()=>createReplace)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/from-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
const createReplace = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ConfigAPI["replace"]}
   */ const replace = async (config, options = {})=>{
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const res = await api.post('config/replace', {
            signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["fromString"])(JSON.stringify(config))
            ], controller, options.headers)
        });
        await res.text();
    };
    return replace;
});
}}),
"[project]/node_modules/ipfs-http-client/src/config/set.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSet": (()=>createSet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createSet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ConfigAPI["set"]}
   */ const set = async (key, value, options = {})=>{
        if (typeof key !== 'string') {
            throw new Error('Invalid key type');
        }
        const params = {
            ...options,
            ...encodeParam(key, value)
        };
        const res = await api.post('config', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(params),
            headers: options.headers
        });
        await res.text();
    };
    return set;
});
/**
 * @param {*} key
 * @param {*} value
 */ const encodeParam = (key, value)=>{
    switch(typeof value){
        case 'boolean':
            return {
                arg: [
                    key,
                    value.toString()
                ],
                bool: true
            };
        case 'string':
            return {
                arg: [
                    key,
                    value
                ]
            };
        default:
            return {
                arg: [
                    key,
                    JSON.stringify(value)
                ],
                json: true
            };
    }
};
}}),
"[project]/node_modules/ipfs-http-client/src/config/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createConfig": (()=>createConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$profiles$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/profiles/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$get$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/get-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$replace$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/replace.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$set$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/set.js [client] (ecmascript)");
;
;
;
;
;
function createConfig(config) {
    return {
        getAll: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$get$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGetAll"])(config),
        get: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(config),
        set: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$set$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createSet"])(config),
        replace: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$replace$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createReplace"])(config),
        profiles: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$profiles$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createProfiles"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/dag/export.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createExport": (()=>createExport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createExport = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DAGAPI["export"]}
   */ async function* dagExport(root, options = {}) {
        const res = await api.post('dag/export', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: root.toString()
            }),
            headers: options.headers
        });
        yield* res.iterator();
    }
    return dagExport;
});
}}),
"[project]/node_modules/ipfs-http-client/src/lib/resolve.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "resolve": (()=>resolve)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/err-code/index.js [client] (ecmascript)");
;
;
async function* resolve(cid, path, codecs, getBlock, options) {
    /**
   * @param {CID} cid
   */ const load = async (cid)=>{
        const codec = await codecs.getCodec(cid.code);
        const block = await getBlock(cid, options);
        return codec.decode(block);
    };
    const parts = path.split('/').filter(Boolean);
    let value = await load(cid);
    let lastCid = cid;
    // End iteration if there isn't a CID to follow any more
    while(parts.length){
        const key = parts.shift();
        if (!key) {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error(`Could not resolve path "${path}"`), 'ERR_INVALID_PATH');
        }
        if (Object.prototype.hasOwnProperty.call(value, key)) {
            value = value[key];
            yield {
                value,
                remainderPath: parts.join('/')
            };
        } else {
            throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error(`no link named "${key}" under ${lastCid}`), 'ERR_NO_LINK');
        }
        const cid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].asCID(value);
        if (cid) {
            lastCid = cid;
            value = await load(value);
        }
    }
    yield {
        value,
        remainderPath: ''
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/dag/get.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGet": (()=>createGet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/resolve.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$first$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/it-first/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/it-last/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/err-code/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/get.js [client] (ecmascript)");
;
;
;
;
;
;
const createGet = (codecs, options)=>{
    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api, opts)=>{
        const getBlock = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(opts);
        /**
     * @type {DAGAPI["get"]}
     */ const get = async (cid, options = {})=>{
            if (options.path) {
                const entry = options.localResolve ? await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$first$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__["resolve"])(cid, options.path, codecs, getBlock, options)) : await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__["resolve"])(cid, options.path, codecs, getBlock, options));
                /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */ const result = entry;
                if (!result) {
                    throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error('Not found'), 'ERR_NOT_FOUND');
                }
                return result;
            }
            const codec = await codecs.getCodec(cid.code);
            const block = await getBlock(cid, options);
            const node = codec.decode(block);
            return {
                value: node,
                remainderPath: ''
            };
        };
        return get;
    });
    return fn(options);
};
}}),
"[project]/node_modules/ipfs-http-client/src/dag/import.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createImport": (()=>createImport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
;
;
;
;
;
const createImport = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DAGAPI["import"]}
   */ async function* dagImport(source, options = {}) {
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const { headers, body } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])(source, controller, options.headers);
        const res = await api.post('dag/import', {
            signal,
            headers,
            body,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                'pin-roots': options.pinRoots
            })
        });
        for await (const { Root } of res.ndjson()){
            if (Root !== undefined) {
                const { Cid: { '/': Cid }, PinErrorMsg } = Root;
                yield {
                    root: {
                        cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(Cid),
                        pinErrorMsg: PinErrorMsg
                    }
                };
            }
        }
    }
    return dagImport;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dag/put.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPut": (()=>createPut)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
const createPut = (codecs, options)=>{
    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
        /**
     * @type {DAGAPI["put"]}
     */ const put = async (dagNode, options = {})=>{
            const settings = {
                storeCodec: 'dag-cbor',
                hashAlg: 'sha2-256',
                ...options
            };
            let serialized;
            if (settings.inputCodec) {
                // if you supply an inputCodec, we assume you're passing in a raw, encoded
                // block using that codec, so we'll just pass that on to the server and let
                // it deal with the decode/encode/store cycle
                if (!(dagNode instanceof Uint8Array)) {
                    throw new Error('Can only inputCodec on raw bytes that can be decoded');
                }
                serialized = dagNode;
            } else {
                // if you don't supply an inputCodec, we assume you've passed in a JavaScript
                // object you want to have encoded using storeCodec, so we'll prepare it for
                // you if we have the codec
                const storeCodec = await codecs.getCodec(settings.storeCodec);
                serialized = storeCodec.encode(dagNode);
                // now we have a serialized form, the server should be told to receive it
                // in that format
                settings.inputCodec = settings.storeCodec;
            }
            // allow aborting requests on body errors
            const controller = new AbortController();
            const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, settings.signal);
            const res = await api.post('dag/put', {
                timeout: settings.timeout,
                signal,
                searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(settings),
                ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                    serialized
                ], controller, settings.headers)
            });
            const data = await res.json();
            return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(data.Cid['/']);
        };
        return put;
    });
    return fn(options);
};
}}),
"[project]/node_modules/ipfs-http-client/src/dag/resolve.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createResolve": (()=>createResolve)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createResolve = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DAGAPI["resolve"]}
   */ const resolve = async (ipfsPath, options = {})=>{
        const res = await api.post('dag/resolve', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\/[/]+/g, '/') : ''}`,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return {
            cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(data.Cid['/']),
            remainderPath: data.RemPath
        };
    };
    return resolve;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dag/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createDag": (()=>createDag)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$export$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/export.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$import$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/import.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/put.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/resolve.js [client] (ecmascript)");
;
;
;
;
;
function createDag(codecs, config) {
    return {
        export: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$export$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createExport"])(config),
        get: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(codecs, config),
        import: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$import$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createImport"])(config),
        put: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPut"])(codecs, config),
        resolve: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createResolve"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/dht/response-types.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
// Response types are defined here =
// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24
__turbopack_context__.s({
    "AddingPeer": (()=>AddingPeer),
    "DialingPeer": (()=>DialingPeer),
    "FinalPeer": (()=>FinalPeer),
    "PeerResponse": (()=>PeerResponse),
    "Provider": (()=>Provider),
    "QueryError": (()=>QueryError),
    "SendingQuery": (()=>SendingQuery),
    "Value": (()=>Value)
});
const SendingQuery = 0;
const PeerResponse = 1;
const FinalPeer = 2;
const QueryError = 3;
const Provider = 4;
const Value = 5;
const AddingPeer = 6;
const DialingPeer = 7;
}}),
"[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "mapEvent": (()=>mapEvent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/from-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/response-types.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/peer-id/dist/src/index.js [client] (ecmascript)");
;
;
;
;
const mapEvent = (event)=>{
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["SendingQuery"]) {
        return {
            name: 'SENDING_QUERY',
            type: event.Type
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["PeerResponse"]) {
        return {
            from: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(event.ID),
            name: 'PEER_RESPONSE',
            type: event.Type,
            // TODO: how to infer this from the go-ipfs response
            messageType: 0,
            // TODO: how to infer this from the go-ipfs response
            messageName: 'PUT_VALUE',
            closer: (event.Responses || []).map(({ ID, Addrs })=>({
                    id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(ID),
                    multiaddrs: Addrs.map((addr)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(addr)),
                    protocols: []
                })),
            providers: (event.Responses || []).map(({ ID, Addrs })=>({
                    id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(ID),
                    multiaddrs: Addrs.map((addr)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(addr)),
                    protocols: []
                }))
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["FinalPeer"]) {
        // dht.query ends with a FinalPeer event with no Responses
        /** @type {import('@libp2p/interface-peer-info').PeerInfo} */ let peer = {
            // @ts-expect-error go-ipfs does not return this
            id: event.ID ?? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(event.ID),
            /** @type {Multiaddr[]} */ multiaddrs: [],
            protocols: []
        };
        if (event.Responses && event.Responses.length) {
            // dht.findPeer has the result in the Responses field
            peer = {
                id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(event.Responses[0].ID),
                multiaddrs: event.Responses[0].Addrs.map((addr)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(addr)),
                protocols: []
            };
        }
        return {
            name: 'FINAL_PEER',
            type: event.Type,
            peer
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["QueryError"]) {
        return {
            name: 'QUERY_ERROR',
            type: event.Type,
            error: new Error(event.Extra)
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Provider"]) {
        return {
            name: 'PROVIDER',
            type: event.Type,
            providers: event.Responses.map(({ ID, Addrs })=>({
                    id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(ID),
                    multiaddrs: Addrs.map((addr)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(addr)),
                    protocols: []
                }))
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Value"]) {
        return {
            name: 'VALUE',
            type: event.Type,
            value: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["fromString"])(event.Extra, 'base64pad')
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["AddingPeer"]) {
        const peers = event.Responses.map(({ ID })=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(ID));
        if (!peers.length) {
            throw new Error('No peer found');
        }
        return {
            name: 'ADDING_PEER',
            type: event.Type,
            peer: peers[0]
        };
    }
    if (event.Type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$response$2d$types$2e$js__$5b$client$5d$__$28$ecmascript$29$__["DialingPeer"]) {
        return {
            name: 'DIALING_PEER',
            type: event.Type,
            peer: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(event.ID)
        };
    }
    throw new Error('Unknown DHT event type');
};
}}),
"[project]/node_modules/ipfs-http-client/src/dht/find-peer.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createFindPeer": (()=>createFindPeer)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)");
;
;
;
const createFindPeer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DHTAPI["findPeer"]}
   */ async function* findPeer(peerId, options = {}) {
        const res = await api.post('dht/findpeer', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: peerId,
                ...options
            }),
            headers: options.headers
        });
        for await (const event of res.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__["mapEvent"])(event);
        }
    }
    return findPeer;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dht/find-provs.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createFindProvs": (()=>createFindProvs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)");
;
;
;
const createFindProvs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DHTAPI["findProvs"]}
   */ async function* findProvs(cid, options = {}) {
        const res = await api.post('dht/findprovs', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: cid.toString(),
                ...options
            }),
            headers: options.headers
        });
        for await (const event of res.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__["mapEvent"])(event);
        }
    }
    return findProvs;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dht/get.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGet": (()=>createGet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/to-string.js [client] (ecmascript)");
;
;
;
;
const createGet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DHTAPI["get"]}
   */ async function* get(key, options = {}) {
        const res = await api.post('dht/get', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                // arg: base36.encode(key),
                arg: key instanceof Uint8Array ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toString"])(key) : key.toString(),
                ...options
            }),
            headers: options.headers
        });
        for await (const event of res.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__["mapEvent"])(event);
        }
    }
    return get;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dht/provide.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createProvide": (()=>createProvide)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)");
;
;
;
const createProvide = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DHTAPI["provide"]}
   */ async function* provide(cids, options = {
        recursive: false
    }) {
        /** @type {CID[]} */ const cidArr = Array.isArray(cids) ? cids : [
            cids
        ];
        const res = await api.post('dht/provide', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: cidArr.map((cid)=>cid.toString()),
                ...options
            }),
            headers: options.headers
        });
        for await (const event of res.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__["mapEvent"])(event);
        }
    }
    return provide;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dht/put.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPut": (()=>createPut)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/to-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)");
;
;
;
;
;
;
const createPut = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DHTAPI["put"]}
   */ async function* put(key, value, options = {}) {
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const res = await api.post('dht/put', {
            signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: key instanceof Uint8Array ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toString"])(key) : key.toString(),
                ...options
            }),
            ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                value
            ], controller, options.headers)
        });
        for await (const event of res.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__["mapEvent"])(event);
        }
    }
    return put;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dht/query.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createQuery": (()=>createQuery)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/map-event.js [client] (ecmascript)");
;
;
;
const createQuery = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DHTAPI["query"]}
   */ async function* query(peerId, options = {}) {
        const res = await api.post('dht/query', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: peerId.toString(),
                ...options
            }),
            headers: options.headers
        });
        for await (const event of res.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$map$2d$event$2e$js__$5b$client$5d$__$28$ecmascript$29$__["mapEvent"])(event);
        }
    }
    return query;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dht/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createDht": (()=>createDht)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$find$2d$peer$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/find-peer.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$find$2d$provs$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/find-provs.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$provide$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/provide.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/put.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$query$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/query.js [client] (ecmascript)");
;
;
;
;
;
;
function createDht(config) {
    return {
        findPeer: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$find$2d$peer$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createFindPeer"])(config),
        findProvs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$find$2d$provs$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createFindProvs"])(config),
        get: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(config),
        provide: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$provide$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createProvide"])(config),
        put: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPut"])(config),
        query: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$query$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createQuery"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/diag/cmds.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createCmds": (()=>createCmds)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createCmds = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DiagAPI["cmds"]}
   */ async function cmds(options = {}) {
        const res = await api.post('diag/cmds', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        return res.json();
    }
    return cmds;
});
}}),
"[project]/node_modules/ipfs-http-client/src/diag/net.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNet": (()=>createNet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createNet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DiagAPI["net"]}
   */ async function net(options = {}) {
        const res = await api.post('diag/net', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        return res.json();
    }
    return net;
});
}}),
"[project]/node_modules/ipfs-http-client/src/diag/sys.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSys": (()=>createSys)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createSys = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {DiagAPI["sys"]}
   */ async function sys(options = {}) {
        const res = await api.post('diag/sys', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        return res.json();
    }
    return sys;
});
}}),
"[project]/node_modules/ipfs-http-client/src/diag/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createDiag": (()=>createDiag)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$cmds$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/diag/cmds.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$net$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/diag/net.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$sys$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/diag/sys.js [client] (ecmascript)");
;
;
;
function createDiag(config) {
    return {
        cmds: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$cmds$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createCmds"])(config),
        net: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$net$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createNet"])(config),
        sys: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$sys$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createSys"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/files/chmod.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createChmod": (()=>createChmod)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createChmod = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["chmod"]}
   */ async function chmod(path, mode, options = {}) {
        const res = await api.post('files/chmod', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                mode,
                ...options
            }),
            headers: options.headers
        });
        await res.text();
    }
    return chmod;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/cp.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createCp": (()=>createCp)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createCp = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["cp"]}
   */ async function cp(sources, destination, options = {}) {
        /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */ const sourceArr = Array.isArray(sources) ? sources : [
            sources
        ];
        const res = await api.post('files/cp', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: sourceArr.concat(destination).map((src)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].asCID(src) ? `/ipfs/${src}` : src),
                ...options
            }),
            headers: options.headers
        });
        await res.text();
    }
    return cp;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/flush.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createFlush": (()=>createFlush)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createFlush = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["flush"]}
   */ async function flush(path, options = {}) {
        if (!path || typeof path !== 'string') {
            throw new Error('ipfs.files.flush requires a path');
        }
        const res = await api.post('files/flush', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(data.Cid);
    }
    return flush;
});
}}),
"[project]/node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "objectToCamelWithMetadata": (()=>objectToCamelWithMetadata)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
;
function objectToCamelWithMetadata(entry) {
    const file = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(entry);
    if (Object.prototype.hasOwnProperty.call(file, 'mode')) {
        file.mode = parseInt(file.mode, 8);
    }
    if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {
        file.mtime = {
            secs: file.mtime,
            nsecs: file.mtimeNsecs || 0
        };
        delete file.mtimeNsecs;
    }
    return file;
}
}}),
"[project]/node_modules/ipfs-http-client/src/files/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2d$with$2d$metadata$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
;
const createLs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["ls"]}
   */ async function* ls(path, options = {}) {
        if (!path) {
            throw new Error('ipfs.files.ls requires a path');
        }
        const res = await api.post('files/ls', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].asCID(path) ? `/ipfs/${path}` : path,
                // default long to true, diverges from go-ipfs where its false by default
                long: true,
                ...options,
                stream: true
            }),
            headers: options.headers
        });
        for await (const result of res.ndjson()){
            // go-ipfs does not yet support the "stream" option
            if ('Entries' in result) {
                for (const entry of result.Entries || []){
                    yield toCoreInterface((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2d$with$2d$metadata$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamelWithMetadata"])(entry));
                }
            } else {
                yield toCoreInterface((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2d$with$2d$metadata$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamelWithMetadata"])(result));
            }
        }
    }
    return ls;
});
/**
 * @param {*} entry
 */ function toCoreInterface(entry) {
    if (entry.hash) {
        entry.cid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(entry.hash);
    }
    delete entry.hash;
    entry.type = entry.type === 1 ? 'directory' : 'file';
    return entry;
}
}}),
"[project]/node_modules/ipfs-http-client/src/files/mkdir.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createMkdir": (()=>createMkdir)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createMkdir = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["mkdir"]}
   */ async function mkdir(path, options = {}) {
        const res = await api.post('files/mkdir', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                ...options
            }),
            headers: options.headers
        });
        await res.text();
    }
    return mkdir;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/mv.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createMv": (()=>createMv)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createMv = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["mv"]}
   */ async function mv(sources, destination, options = {}) {
        if (!Array.isArray(sources)) {
            sources = [
                sources
            ];
        }
        const res = await api.post('files/mv', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: sources.concat(destination),
                ...options
            }),
            headers: options.headers
        });
        await res.text();
    }
    return mv;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/read.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRead": (()=>createRead)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
// @ts-expect-error no types
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$to$2d$it$2f$source$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/stream-to-it/source.js [client] (ecmascript)");
;
;
;
const createRead = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["read"]}
   */ async function* read(path, options = {}) {
        const res = await api.post('files/read', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                count: options.length,
                ...options
            }),
            headers: options.headers
        });
        yield* (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$stream$2d$to$2d$it$2f$source$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(res.body);
    }
    return read;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-utils/src/http.js [client] (ecmascript)");
;
;
;
const createRm = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["rm"]}
   */ async function rm(path, options = {}) {
        const res = await api.post('files/rm', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                ...options
            }),
            headers: options.headers
        });
        const body = await res.text();
        // we don't expect text body to be ever present
        // (if so, it means an error such as https://github.com/ipfs/go-ipfs/issues/8606)
        if (body !== '') {
            /** @type {Error} */ const error = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$http$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"].HTTPError(res);
            error.message = body;
            throw error;
        }
    }
    return rm;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/stat.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStat": (()=>createStat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2d$with$2d$metadata$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
;
const createStat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["stat"]}
   */ async function stat(path, options = {}) {
        const res = await api.post('files/stat', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        data.WithLocality = data.WithLocality || false;
        return toCoreInterface((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2d$with$2d$metadata$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamelWithMetadata"])(data));
    }
    return stat;
});
/**
 * @param {*} entry
 */ function toCoreInterface(entry) {
    entry.cid = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(entry.hash);
    delete entry.hash;
    return entry;
}
}}),
"[project]/node_modules/ipfs-http-client/src/files/touch.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createTouch": (()=>createTouch)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createTouch = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["touch"]}
   */ async function touch(path, options = {}) {
        const res = await api.post('files/touch', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                ...options
            }),
            headers: options.headers
        });
        await res.text();
    }
    return touch;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/write.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createWrite": (()=>createWrite)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$mode$2d$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/mode-to-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$parse$2d$mtime$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/parse-mtime.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
;
const createWrite = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {FilesAPI["write"]}
   */ async function write(path, input, options = {}) {
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const res = await api.post('files/write', {
            signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                streamChannels: true,
                count: options.length,
                ...options
            }),
            ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                {
                    content: input,
                    path: 'arg',
                    mode: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$mode$2d$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["modeToString"])(options.mode),
                    mtime: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$parse$2d$mtime$2e$js__$5b$client$5d$__$28$ecmascript$29$__["parseMtime"])(options.mtime)
                }
            ], controller, options.headers)
        });
        await res.text();
    }
    return write;
});
}}),
"[project]/node_modules/ipfs-http-client/src/files/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createFiles": (()=>createFiles)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$chmod$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/chmod.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$cp$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/cp.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$flush$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/flush.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$mkdir$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/mkdir.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$mv$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/mv.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$read$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/read.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/rm.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/stat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$touch$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/touch.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$write$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/write.js [client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
function createFiles(config) {
    return {
        chmod: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$chmod$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createChmod"])(config),
        cp: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$cp$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createCp"])(config),
        flush: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$flush$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createFlush"])(config),
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(config),
        mkdir: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$mkdir$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createMkdir"])(config),
        mv: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$mv$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createMv"])(config),
        read: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$read$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRead"])(config),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(config),
        stat: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config),
        touch: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$touch$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createTouch"])(config),
        write: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$write$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createWrite"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/key/export.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createExport": (()=>createExport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/err-code/index.js [client] (ecmascript)");
;
;
const createExport = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["export"]}
   */ const exportKey = async (name, password, options = {})=>{
        throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');
    };
    return exportKey;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/gen.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGen": (()=>createGen)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createGen = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["gen"]}
   */ async function gen(name, options) {
        const opts = options ?? {
            type: 'Ed25519'
        };
        const res = await api.post('key/gen', {
            signal: opts.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: name,
                ...opts
            }),
            headers: opts.headers
        });
        const data = await res.json();
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(data);
    }
    return gen;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/import.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createImport": (()=>createImport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createImport = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["import"]}
   */ async function importKey(name, pem, password, options = {}) {
        const res = await api.post('key/import', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: name,
                pem,
                password,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(data);
    }
    return importKey;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/info.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createInfo": (()=>createInfo)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/err-code/index.js [client] (ecmascript)");
;
;
const createInfo = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["info"]}
   */ const info = async (name, options = {})=>{
        throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');
    };
    return info;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/list.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createList": (()=>createList)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createList = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["list"]}
   */ async function list(options = {}) {
        const res = await api.post('key/list', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        const data = await res.json();
        return (data.Keys || []).map((/** @type {any} **/ k)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(k));
    }
    return list;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/rename.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRename": (()=>createRename)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createRename = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["rename"]}
   */ async function rename(oldName, newName, options = {}) {
        const res = await api.post('key/rename', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: [
                    oldName,
                    newName
                ],
                ...options
            }),
            headers: options.headers
        });
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json());
    }
    return rename;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createRm = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {KeyAPI["rm"]}
   */ async function rm(name, options = {}) {
        const res = await api.post('key/rm', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: name,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(data.Keys[0]);
    }
    return rm;
});
}}),
"[project]/node_modules/ipfs-http-client/src/key/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createKey": (()=>createKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$export$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/export.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$gen$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/gen.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$import$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/import.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$info$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/info.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$list$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/list.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$rename$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/rename.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/rm.js [client] (ecmascript)");
;
;
;
;
;
;
;
function createKey(config) {
    return {
        export: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$export$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createExport"])(config),
        gen: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$gen$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGen"])(config),
        import: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$import$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createImport"])(config),
        info: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$info$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createInfo"])(config),
        list: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$list$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createList"])(config),
        rename: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$rename$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRename"])(config),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/log/level.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLevel": (()=>createLevel)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createLevel = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {LogAPI["level"]}
   */ async function level(subsystem, level1, options = {}) {
        const res = await api.post('log/level', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: [
                    subsystem,
                    level1
                ],
                ...options
            }),
            headers: options.headers
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json());
    }
    return level;
});
}}),
"[project]/node_modules/ipfs-http-client/src/log/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createLs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {LogAPI["ls"]}
   */ async function ls(options = {}) {
        const res = await api.post('log/ls', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        const data = await res.json();
        return data.Strings;
    }
    return ls;
});
}}),
"[project]/node_modules/ipfs-http-client/src/log/tail.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createTail": (()=>createTail)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createTail = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {LogAPI["tail"]}
   */ async function* tail(options = {}) {
        const res = await api.post('log/tail', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        yield* res.ndjson();
    }
    return tail;
});
}}),
"[project]/node_modules/ipfs-http-client/src/log/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLog": (()=>createLog)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$level$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/log/level.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/log/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$tail$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/log/tail.js [client] (ecmascript)");
;
;
;
function createLog(config) {
    return {
        level: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$level$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLevel"])(config),
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(config),
        tail: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$tail$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createTail"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/name/publish.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPublish": (()=>createPublish)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createPublish = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {NameAPI["publish"]}
   */ async function publish(path, options = {}) {
        const res = await api.post('name/publish', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${path}`,
                ...options
            }),
            headers: options.headers
        });
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json());
    }
    return publish;
});
}}),
"[project]/node_modules/ipfs-http-client/src/name/resolve.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createResolve": (()=>createResolve)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createResolve = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {NameAPI["resolve"]}
   */ async function* resolve(path, options = {}) {
        const res = await api.post('name/resolve', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                stream: true,
                ...options
            }),
            headers: options.headers
        });
        for await (const result of res.ndjson()){
            yield result.Path;
        }
    }
    return resolve;
});
}}),
"[project]/node_modules/ipfs-http-client/src/name/pubsub/cancel.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createCancel": (()=>createCancel)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createCancel = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {NamePubsubAPI["cancel"]}
   */ async function cancel(name, options = {}) {
        const res = await api.post('name/pubsub/cancel', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: name,
                ...options
            }),
            headers: options.headers
        });
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json());
    }
    return cancel;
});
}}),
"[project]/node_modules/ipfs-http-client/src/name/pubsub/state.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createState": (()=>createState)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createState = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {NamePubsubAPI["state"]}
   */ async function state(options = {}) {
        const res = await api.post('name/pubsub/state', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        // @ts-expect-error server output is not typed
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json());
    }
    return state;
});
}}),
"[project]/node_modules/ipfs-http-client/src/name/pubsub/subs.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSubs": (()=>createSubs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createSubs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {NamePubsubAPI["subs"]}
   */ async function subs(options = {}) {
        const res = await api.post('name/pubsub/subs', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        const data = await res.json();
        return data.Strings || [];
    }
    return subs;
});
}}),
"[project]/node_modules/ipfs-http-client/src/name/pubsub/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPubsub": (()=>createPubsub)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$cancel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/pubsub/cancel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$state$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/pubsub/state.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$subs$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/pubsub/subs.js [client] (ecmascript)");
;
;
;
function createPubsub(config) {
    return {
        cancel: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$cancel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createCancel"])(config),
        state: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$state$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createState"])(config),
        subs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$subs$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createSubs"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/name/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createName": (()=>createName)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$publish$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/publish.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/resolve.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/pubsub/index.js [client] (ecmascript)");
;
;
;
function createName(config) {
    return {
        publish: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$publish$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPublish"])(config),
        resolve: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createResolve"])(config),
        pubsub: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$pubsub$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPubsub"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/object/data.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createData": (()=>createData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectAPI["data"]}
   */ async function data(cid, options = {}) {
        const res = await api.post('object/data', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${cid instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(cid) : cid}`,
                ...options
            }),
            headers: options.headers
        });
        const data1 = await res.arrayBuffer();
        return new Uint8Array(data1, 0, data1.byteLength);
    }
    return data;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/get.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGet": (()=>createGet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/from-string.js [client] (ecmascript)");
;
;
;
;
const createGet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectAPI["get"]}
   */ async function get(cid, options = {}) {
        const res = await api.post('object/get', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${cid instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(cid) : cid}`,
                dataEncoding: 'base64',
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return {
            Data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["fromString"])(data.Data, 'base64pad'),
            Links: (data.Links || []).map((/** @type {any} */ link)=>({
                    Name: link.Name,
                    Hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(link.Hash),
                    Tsize: link.Size
                }))
        };
    }
    return get;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/links.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLinks": (()=>createLinks)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createLinks = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectAPI["links"]}
   */ async function links(cid, options = {}) {
        const res = await api.post('object/links', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${cid instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(cid) : cid}`,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return (data.Links || []).map((/** @type {any} */ l)=>({
                Name: l.Name,
                Tsize: l.Size,
                Hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(l.Hash)
            }));
    }
    return links;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/new.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createNew": (()=>createNew)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createNew = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectAPI["new"]}
   */ async function newObject(options = {}) {
        const res = await api.post('object/new', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: options.template,
                ...options
            }),
            headers: options.headers
        });
        const { Hash } = await res.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(Hash);
    }
    return newObject;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/put.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPut": (()=>createPut)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/put.js [client] (ecmascript)");
;
;
const createPut = (codecs, options)=>{
    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
        const dagPut = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPut"])(codecs, options);
        /**
     * @type {ObjectAPI["put"]}
     */ async function put(obj, options = {}) {
            return dagPut(obj, {
                ...options,
                storeCodec: 'dag-pb',
                hashAlg: 'sha2-256',
                version: 1
            });
        }
        return put;
    });
    return fn(options);
};
}}),
"[project]/node_modules/ipfs-http-client/src/object/stat.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStat": (()=>createStat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createStat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectAPI["stat"]}
   */ async function stat(cid, options = {}) {
        const res = await api.post('object/stat', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${cid}`,
                ...options
            }),
            headers: options.headers
        });
        const output = await res.json();
        return {
            ...output,
            Hash: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(output.Hash)
        };
    }
    return stat;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/patch/add-link.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAddLink": (()=>createAddLink)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createAddLink = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectPatchAPI["addLink"]}
   */ async function addLink(cid, dLink, options = {}) {
        const res = await api.post('object/patch/add-link', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: [
                    `${cid}`,
                    // @ts-expect-error loose types
                    dLink.Name || dLink.name || '',
                    // @ts-expect-error loose types
                    (dLink.Hash || dLink.cid || '').toString() || null
                ],
                ...options
            }),
            headers: options.headers
        });
        const { Hash } = await res.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(Hash);
    }
    return addLink;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/patch/append-data.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAppendData": (()=>createAppendData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
const createAppendData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectPatchAPI["appendData"]}
   */ async function appendData(cid, data, options = {}) {
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const res = await api.post('object/patch/append-data', {
            signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${cid}`,
                ...options
            }),
            ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                data
            ], controller, options.headers)
        });
        const { Hash } = await res.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(Hash);
    }
    return appendData;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/patch/rm-link.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRmLink": (()=>createRmLink)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createRmLink = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectPatchAPI["rmLink"]}
   */ async function rmLink(cid, dLink, options = {}) {
        const res = await api.post('object/patch/rm-link', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: [
                    `${cid}`,
                    // @ts-expect-error loose types
                    dLink.Name || dLink.name || null
                ],
                ...options
            }),
            headers: options.headers
        });
        const { Hash } = await res.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(Hash);
    }
    return rmLink;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/patch/set-data.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSetData": (()=>createSetData)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
const createSetData = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {ObjectPatchAPI["setData"]}
   */ async function setData(cid, data, options = {}) {
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const res = await api.post('object/patch/set-data', {
            signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: [
                    `${cid}`
                ],
                ...options
            }),
            ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                data
            ], controller, options.headers)
        });
        const { Hash } = await res.json();
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(Hash);
    }
    return setData;
});
}}),
"[project]/node_modules/ipfs-http-client/src/object/patch/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPatch": (()=>createPatch)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$add$2d$link$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/patch/add-link.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$append$2d$data$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/patch/append-data.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$rm$2d$link$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/patch/rm-link.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$set$2d$data$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/patch/set-data.js [client] (ecmascript)");
;
;
;
;
function createPatch(config) {
    return {
        addLink: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$add$2d$link$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAddLink"])(config),
        appendData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$append$2d$data$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAppendData"])(config),
        rmLink: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$rm$2d$link$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRmLink"])(config),
        setData: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$set$2d$data$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createSetData"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/object/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createObject": (()=>createObject)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$data$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/data.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$links$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/links.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$new$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/new.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/put.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/stat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/patch/index.js [client] (ecmascript)");
;
;
;
;
;
;
;
function createObject(codecs, config) {
    return {
        data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$data$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createData"])(config),
        get: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(config),
        links: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$links$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLinks"])(config),
        new: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$new$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createNew"])(config),
        put: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$put$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPut"])(codecs, config),
        stat: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config),
        patch: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$patch$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPatch"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/add-all.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAddAll": (()=>createAddAll)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$pins$2f$normalise$2d$input$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/pins/normalise-input.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
;
const createAddAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {PinAPI["addAll"]}
   */ async function* addAll(source, options = {}) {
        for await (const { path, recursive, metadata } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$pins$2f$normalise$2d$input$2e$js__$5b$client$5d$__$28$ecmascript$29$__["normaliseInput"])(source)){
            const res = await api.post('pin/add', {
                signal: options.signal,
                searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                    ...options,
                    arg: path,
                    recursive,
                    metadata: metadata ? JSON.stringify(metadata) : undefined,
                    stream: true
                }),
                headers: options.headers
            });
            for await (const pin of res.ndjson()){
                if (pin.Pins) {
                    for (const cid of pin.Pins){
                        yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(cid);
                    }
                    continue;
                }
                yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(pin);
            }
        }
    }
    return addAll;
});
}}),
"[project]/node_modules/ipfs-http-client/src/pin/add.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAdd": (()=>createAdd)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/add-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/it-last/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
;
;
;
function createAdd(config) {
    const all = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAddAll"])(config);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])(()=>{
        /**
     * @type {PinAPI["add"]}
     */ async function add(path, options = {}) {
            // @ts-expect-error last can return undefined
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(all([
                {
                    path,
                    ...options
                }
            ], options));
        }
        return add;
    })(config);
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
/**
 * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions
 * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI
 */ /**
 * @param {string} type
 * @param {string} cid
 * @param {Record<string, string>} metadata
 */ function toPin(type, cid, metadata) {
    /** @type {import('ipfs-core-types/src/pin').LsResult} */ const pin = {
        type,
        cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(cid)
    };
    if (metadata) {
        pin.metadata = metadata;
    }
    return pin;
}
const createLs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {PinAPI["ls"]}
   */ async function* ls(options = {}) {
        /** @type {any[]} */ let paths = [];
        if (options.paths) {
            paths = Array.isArray(options.paths) ? options.paths : [
                options.paths
            ];
        }
        const res = await api.post('pin/ls', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                ...options,
                arg: paths.map((path)=>`${path}`),
                stream: true
            }),
            headers: options.headers
        });
        for await (const pin of res.ndjson()){
            if (pin.Keys) {
                for (const cid of Object.keys(pin.Keys)){
                    yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata);
                }
                return;
            }
            yield toPin(pin.Type, pin.Cid, pin.Metadata);
        }
    }
    return ls;
});
}}),
"[project]/node_modules/ipfs-http-client/src/pin/rm-all.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRmAll": (()=>createRmAll)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$pins$2f$normalise$2d$input$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/pins/normalise-input.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
;
const createRmAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {PinAPI["rmAll"]}
   */ async function* rmAll(source, options = {}) {
        for await (const { path, recursive } of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$pins$2f$normalise$2d$input$2e$js__$5b$client$5d$__$28$ecmascript$29$__["normaliseInput"])(source)){
            const searchParams = new URLSearchParams(options.searchParams);
            searchParams.append('arg', `${path}`);
            if (recursive != null) searchParams.set('recursive', String(recursive));
            const res = await api.post('pin/rm', {
                signal: options.signal,
                headers: options.headers,
                searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                    ...options,
                    arg: `${path}`,
                    recursive
                })
            });
            for await (const pin of res.ndjson()){
                if (pin.Pins) {
                    yield* pin.Pins.map((/** @type {string} */ cid)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(cid));
                    continue;
                }
                yield __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(pin);
            }
        }
    }
    return rmAll;
});
}}),
"[project]/node_modules/ipfs-http-client/src/pin/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$rm$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/rm-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/it-last/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
;
;
;
const createRm = (config)=>{
    const all = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$rm$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRmAll"])(config);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])(()=>{
        /**
     * @type {PinAPI["rm"]}
     */ async function rm(path, options = {}) {
            // @ts-expect-error last can return undefined
            return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(all([
                {
                    path,
                    ...options
                }
            ], options));
        }
        return rm;
    })(config);
};
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/utils.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "decodePin": (()=>decodePin),
    "encodeAddParams": (()=>encodeAddParams),
    "encodeCID": (()=>encodeCID),
    "encodeQuery": (()=>encodeQuery),
    "encodeService": (()=>encodeService)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const decodePin = ({ Name: name, Status: status, Cid: cid })=>{
    return {
        cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(cid),
        name,
        status
    };
};
const encodeService = (service)=>{
    if (typeof service === 'string' && service !== '') {
        return service;
    } else {
        throw new TypeError('service name must be passed');
    }
};
const encodeCID = (cid)=>{
    if (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].asCID(cid)) {
        return cid.toString();
    } else {
        throw new TypeError(`CID instance expected instead of ${typeof cid}`);
    }
};
const encodeQuery = ({ service, cid, name, status, all })=>{
    const query = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
        service: encodeService(service),
        name,
        force: all ? true : undefined
    });
    if (cid) {
        for (const value of cid){
            query.append('cid', encodeCID(value));
        }
    }
    if (status) {
        for (const value of status){
            query.append('status', value);
        }
    }
    return query;
};
const encodeAddParams = ({ cid, service, background, name, origins })=>{
    const params = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
        arg: encodeCID(cid),
        service: encodeService(service),
        name,
        background: background ? true : undefined
    });
    if (origins) {
        for (const origin of origins){
            params.append('origin', origin.toString());
        }
    }
    return params;
};
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/add.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAdd": (()=>createAdd)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/utils.js [client] (ecmascript)");
;
function createAdd(client) {
    /**
   * @type {RemotePiningAPI["add"]}
   */ async function add(cid, { timeout, signal, headers, ...query }) {
        const response = await client.post('pin/remote/add', {
            timeout,
            signal,
            headers,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["encodeAddParams"])({
                cid,
                ...query
            })
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["decodePin"])(await response.json());
    }
    return add;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/utils.js [client] (ecmascript)");
;
function createLs(client) {
    /**
   * @type {RemotePiningAPI["ls"]}
   */ async function* ls({ timeout, signal, headers, ...query }) {
        const response = await client.post('pin/remote/ls', {
            timeout,
            signal,
            headers,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["encodeQuery"])(query)
        });
        for await (const pin of response.ndjson()){
            yield (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["decodePin"])(pin);
        }
    }
    return ls;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/utils.js [client] (ecmascript)");
;
function createRm(client) {
    /**
   * @type {RemotePiningAPI["rm"]}
   */ async function rm({ timeout, signal, headers, ...query }) {
        await client.post('pin/remote/rm', {
            timeout,
            signal,
            headers,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["encodeQuery"])({
                ...query,
                all: false
            })
        });
    }
    return rm;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/rm-all.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRmAll": (()=>createRmAll)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/utils.js [client] (ecmascript)");
;
function createRmAll(client) {
    /**
   * @type {RemotePiningAPI["rmAll"]}
   */ async function rmAll({ timeout, signal, headers, ...query }) {
        await client.post('pin/remote/rm', {
            timeout,
            signal,
            headers,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["encodeQuery"])({
                ...query,
                all: true
            })
        });
    }
    return rmAll;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/service/utils.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat
 */ /**
 * @param {URL} url
 */ __turbopack_context__.s({
    "decodeRemoteService": (()=>decodeRemoteService),
    "decodeStat": (()=>decodeStat),
    "encodeEndpoint": (()=>encodeEndpoint)
});
function encodeEndpoint(url) {
    const href = String(url);
    if (href === 'undefined') {
        throw Error('endpoint is required');
    }
    // Workaround trailing `/` issue in go-ipfs
    // @see https://github.com/ipfs/go-ipfs/issues/7826
    return href[href.length - 1] === '/' ? href.slice(0, -1) : href;
}
function decodeRemoteService(json) {
    return {
        service: json.Service,
        endpoint: new URL(json.ApiEndpoint),
        ...json.Stat && {
            stat: decodeStat(json.Stat)
        }
    };
}
function decodeStat(json) {
    switch(json.Status){
        case 'valid':
            {
                const { Pinning, Pinned, Queued, Failed } = json.PinCount;
                return {
                    status: 'valid',
                    pinCount: {
                        queued: Queued,
                        pinning: Pinning,
                        pinned: Pinned,
                        failed: Failed
                    }
                };
            }
        case 'invalid':
            {
                return {
                    status: 'invalid'
                };
            }
        default:
            {
                return {
                    status: json.Status
                };
            }
    }
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/service/add.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAdd": (()=>createAdd)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/service/utils.js [client] (ecmascript)");
;
;
function createAdd(client) {
    /**
   * @type {RemotePiningServiceAPI["add"]}
   */ async function add(name, options) {
        const { endpoint, key, headers, timeout, signal } = options;
        await client.post('pin/remote/service/add', {
            timeout,
            signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: [
                    name,
                    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["encodeEndpoint"])(endpoint),
                    key
                ]
            }),
            headers
        });
    }
    return add;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/service/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/service/utils.js [client] (ecmascript)");
;
;
function createLs(client) {
    /**
   * @type {RemotePiningServiceAPI["ls"]}
   */ async function ls(options = {}) {
        // @ts-expect-error cannot derive option type from typedef
        const { stat, headers, timeout, signal } = options;
        const response = await client.post('pin/remote/service/ls', {
            timeout,
            signal,
            headers,
            searchParams: stat === true ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                stat
            }) : undefined
        });
        /** @type {{RemoteServices: object[]}} */ const { RemoteServices } = await response.json();
        return RemoteServices.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$utils$2e$js__$5b$client$5d$__$28$ecmascript$29$__["decodeRemoteService"]);
    }
    return ls;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/service/rm.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRm": (()=>createRm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
function createRm(client) {
    /**
   * @type {RemotePiningServiceAPI["rm"]}
   */ async function rm(name, options = {}) {
        await client.post('pin/remote/service/rm', {
            signal: options.signal,
            headers: options.headers,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: name
            })
        });
    }
    return rm;
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/service/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createService": (()=>createService)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$core$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/core.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/service/add.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/service/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/service/rm.js [client] (ecmascript)");
;
;
;
;
function createService(config) {
    const client = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$core$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Client"](config);
    return {
        add: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAdd"])(client),
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(client),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(client)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/remote/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRemote": (()=>createRemote)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$core$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/core.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/add.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/rm.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$rm$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/rm-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/service/index.js [client] (ecmascript)");
;
;
;
;
;
;
function createRemote(config) {
    const client = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$core$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Client"](config);
    return {
        add: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAdd"])(client),
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(client),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(client),
        rmAll: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$rm$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRmAll"])(client),
        service: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$service$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createService"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/pin/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPin": (()=>createPin)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/add-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/add.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$rm$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/rm-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/rm.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/remote/index.js [client] (ecmascript)");
;
;
;
;
;
;
function createPin(config) {
    return {
        addAll: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAddAll"])(config),
        add: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAdd"])(config),
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(config),
        rmAll: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$rm$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRmAll"])(config),
        rm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$rm$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRm"])(config),
        remote: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$remote$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRemote"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "rpcArrayToTextArray": (()=>rpcArrayToTextArray),
    "rpcToBigInt": (()=>rpcToBigInt),
    "rpcToBytes": (()=>rpcToBytes),
    "rpcToText": (()=>rpcToText),
    "textToUrlSafeRpc": (()=>textToUrlSafeRpc)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/from-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/uint8arrays/dist/src/to-string.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$bases$2f$base64$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/bases/base64.js [client] (ecmascript)");
;
;
;
/* HTTP RPC:
 * - wraps binary data in multibase. base64url is used to avoid issues
 *   when a binary data is passed as search param in URL.
 *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939
 *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183
 */ /**
 * @param {Array<string>} strings
 * @returns {Array<string>} strings
 */ const rpcArrayToTextArray = (strings)=>{
    if (Array.isArray(strings)) {
        return strings.map(rpcToText);
    }
    return strings;
};
/**
 * @param {string} mb
 * @returns {string}
 */ const rpcToText = (mb)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toString"])(rpcToBytes(mb));
/**
 * @param {string} mb
 * @returns {Uint8Array}
 */ const rpcToBytes = (mb)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$bases$2f$base64$2e$js__$5b$client$5d$__$28$ecmascript$29$__["base64url"].decode(mb);
/**
 * @param {string} mb
 * @returns {bigint}
 */ const rpcToBigInt = (mb)=>BigInt(`0x${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$to$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toString"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$bases$2f$base64$2e$js__$5b$client$5d$__$28$ecmascript$29$__["base64url"].decode(mb), 'base16')}`);
/**
 * @param {string} text
 * @returns {string}
 */ const textToUrlSafeRpc = (text)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$bases$2f$base64$2e$js__$5b$client$5d$__$28$ecmascript$29$__["base64url"].encode((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uint8arrays$2f$dist$2f$src$2f$from$2d$string$2e$js__$5b$client$5d$__$28$ecmascript$29$__["fromString"])(text));
;
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js [client] (ecmascript)");
;
;
;
const createLs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {PubsubAPI["ls"]}
   */ async function ls(options = {}) {
        const { Strings } = await (await api.post('pubsub/ls', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        })).json();
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcArrayToTextArray"])(Strings) || [];
    }
    return ls;
});
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/peers.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPeers": (()=>createPeers)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js [client] (ecmascript)");
;
;
;
const createPeers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {PubsubAPI["peers"]}
   */ async function peers(topic, options = {}) {
        const res = await api.post('pubsub/peers', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["textToUrlSafeRpc"])(topic),
                ...options
            }),
            headers: options.headers
        });
        const { Strings } = await res.json();
        return Strings || [];
    }
    return peers;
});
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/publish.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPublish": (()=>createPublish)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js [client] (ecmascript)");
;
;
;
;
;
const createPublish = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {PubsubAPI["publish"]}
   */ async function publish(topic, data, options = {}) {
        const searchParams = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
            arg: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["textToUrlSafeRpc"])(topic),
            ...options
        });
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const res = await api.post('pubsub/pub', {
            signal,
            searchParams,
            ...await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])([
                data
            ], controller, options.headers)
        });
        await res.text();
    }
    return publish;
});
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/subscribe.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSubscribe": (()=>createSubscribe)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$logger$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/logger/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/peer-id/dist/src/index.js [client] (ecmascript)");
;
;
;
;
;
const log = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$logger$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["logger"])('ipfs-http-client:pubsub:subscribe');
const createSubscribe = (options, subsTracker)=>{
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
        /**
     * @type {PubsubAPI["subscribe"]}
     */ async function subscribe(topic, handler, options = {}) {
            options.signal = subsTracker.subscribe(topic, handler, options.signal);
            /** @type {(value?: any) => void} */ let done;
            /** @type {(error: Error) => void} */ let fail;
            const result = new Promise((resolve, reject)=>{
                done = resolve;
                fail = reject;
            });
            // In Firefox, the initial call to fetch does not resolve until some data
            // is received. If this doesn't happen within 1 second assume success
            const ffWorkaround = setTimeout(()=>done(), 1000);
            // Do this async to not block Firefox
            api.post('pubsub/sub', {
                signal: options.signal,
                searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                    arg: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["textToUrlSafeRpc"])(topic),
                    ...options
                }),
                headers: options.headers
            }).catch((err)=>{
                // Initial subscribe fail, ensure we clean up
                subsTracker.unsubscribe(topic, handler);
                fail(err);
            }).then((response)=>{
                clearTimeout(ffWorkaround);
                if (!response) {
                    // if there was no response, the subscribe failed
                    return;
                }
                readMessages(response, {
                    onMessage: (message)=>{
                        if (!handler) {
                            return;
                        }
                        if (typeof handler === 'function') {
                            handler(message);
                            return;
                        }
                        if (typeof handler.handleEvent === 'function') {
                            handler.handleEvent(message);
                        }
                    },
                    onEnd: ()=>subsTracker.unsubscribe(topic, handler),
                    onError: options.onError
                });
                done();
            });
            return result;
        }
        return subscribe;
    })(options);
};
/**
 * @param {import('ipfs-utils/src/types').ExtendedResponse} response
 * @param {object} options
 * @param {(message: Message) => void} options.onMessage
 * @param {() => void} options.onEnd
 * @param {ErrorHandlerFn} [options.onError]
 */ async function readMessages(response, { onMessage, onEnd, onError }) {
    onError = onError || log;
    try {
        for await (const msg of response.ndjson()){
            try {
                if (!msg.from) {
                    continue;
                }
                if (msg.from != null && msg.seqno != null) {
                    onMessage({
                        type: 'signed',
                        from: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(msg.from),
                        data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToBytes"])(msg.data),
                        sequenceNumber: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToBigInt"])(msg.seqno),
                        topic: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToText"])(msg.topicIDs[0]),
                        key: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToBytes"])(msg.key ?? 'u'),
                        signature: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToBytes"])(msg.signature ?? 'u')
                    });
                } else {
                    onMessage({
                        type: 'unsigned',
                        data: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToBytes"])(msg.data),
                        topic: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$http$2d$rpc$2d$wire$2d$format$2e$js__$5b$client$5d$__$28$ecmascript$29$__["rpcToText"])(msg.topicIDs[0])
                    });
                }
            } catch (/** @type {any} */ err) {
                err.message = `Failed to parse pubsub message: ${err.message}`;
                onError(err, false, msg) // Not fatal
                ;
            }
        }
    } catch (/** @type {any} */ err) {
        if (!isAbortError(err)) {
            onError(err, true) // Fatal
            ;
        }
    } finally{
        onEnd();
    }
}
/**
 * @param {Error & {type?:string}} error
 * @returns {boolean}
 */ const isAbortError = (error)=>{
    switch(error.type){
        case 'aborted':
            return true;
        // It is `abort` in Electron instead of `aborted`
        case 'abort':
            return true;
        default:
            // FIXME: In testing with Chrome, err.type is undefined (should not be!)
            // Temporarily use the name property instead.
            return error.name === 'AbortError';
    }
};
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/unsubscribe.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions
 * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI
 * @typedef {import('../types').Options} Options
 */ /**
 * @param {Options} options
 * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker
 */ __turbopack_context__.s({
    "createUnsubscribe": (()=>createUnsubscribe)
});
const createUnsubscribe = (options, subsTracker)=>{
    /**
   * @type {PubsubAPI["unsubscribe"]}
   */ async function unsubscribe(topic, handler) {
        subsTracker.unsubscribe(topic, handler);
    }
    return unsubscribe;
};
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/**
 * @typedef {import('@libp2p/interface-pubsub').Message} Message
 * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn
 *
 * @typedef {object} Subscription
 * @property {MessageHandlerFn} handler
 * @property {AbortController} controller
 */ __turbopack_context__.s({
    "SubscriptionTracker": (()=>SubscriptionTracker)
});
class SubscriptionTracker {
    constructor(){
        /** @type {Map<string, Subscription[]>} */ this._subs = new Map();
    }
    /**
   * @param {string} topic
   * @param {MessageHandlerFn} handler
   * @param {AbortSignal} [signal]
   */ subscribe(topic, handler, signal) {
        const topicSubs = this._subs.get(topic) || [];
        if (topicSubs.find((s)=>s.handler === handler)) {
            throw new Error(`Already subscribed to ${topic} with this handler`);
        }
        // Create controller so a call to unsubscribe can cancel the request
        const controller = new AbortController();
        this._subs.set(topic, [
            {
                handler,
                controller
            }
        ].concat(topicSubs));
        // If there is an external signal, forward the abort event
        if (signal) {
            signal.addEventListener('abort', ()=>this.unsubscribe(topic, handler));
        }
        return controller.signal;
    }
    /**
   * @param {string} topic
   * @param {MessageHandlerFn} [handler]
   */ unsubscribe(topic, handler) {
        const subs = this._subs.get(topic) || [];
        let unsubs;
        if (handler) {
            this._subs.set(topic, subs.filter((s)=>s.handler !== handler));
            unsubs = subs.filter((s)=>s.handler === handler);
        } else {
            this._subs.set(topic, []);
            unsubs = subs;
        }
        if (!(this._subs.get(topic) || []).length) {
            this._subs.delete(topic);
        }
        unsubs.forEach((s)=>s.controller.abort());
    }
}
}}),
"[project]/node_modules/ipfs-http-client/src/pubsub/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPubsub": (()=>createPubsub)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$peers$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/peers.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$publish$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/publish.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$subscribe$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/subscribe.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$unsubscribe$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/unsubscribe.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$subscription$2d$tracker$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js [client] (ecmascript)");
;
;
;
;
;
;
function createPubsub(config) {
    const subscriptionTracker = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$subscription$2d$tracker$2e$js__$5b$client$5d$__$28$ecmascript$29$__["SubscriptionTracker"]();
    return {
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(config),
        peers: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$peers$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPeers"])(config),
        publish: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$publish$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPublish"])(config),
        subscribe: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$subscribe$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createSubscribe"])(config, subscriptionTracker),
        unsubscribe: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$unsubscribe$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createUnsubscribe"])(config, subscriptionTracker)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/refs/local.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLocal": (()=>createLocal)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createLocal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RefsAPI["local"]}
   */ async function* refsLocal(options = {}) {
        const res = await api.post('refs/local', {
            signal: options.signal,
            transform: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"],
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        yield* res.ndjson();
    }
    return refsLocal;
});
}}),
"[project]/node_modules/ipfs-http-client/src/refs/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRefs": (()=>createRefs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$refs$2f$local$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/refs/local.js [client] (ecmascript)");
;
;
;
;
;
const createRefs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api, opts)=>{
    /**
   * @type {RefsAPI["refs"]}
   */ const refs = async function*(args, options = {}) {
        /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */ const argsArr = Array.isArray(args) ? args : [
            args
        ];
        const res = await api.post('refs', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: argsArr.map((arg)=>`${arg instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(arg) : arg}`),
                ...options
            }),
            headers: options.headers,
            transform: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"]
        });
        yield* res.ndjson();
    };
    return Object.assign(refs, {
        local: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$refs$2f$local$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLocal"])(opts)
    });
});
}}),
"[project]/node_modules/ipfs-http-client/src/repo/gc.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGc": (()=>createGc)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createGc = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RepoAPI["gc"]}
   */ async function* gc(options = {}) {
        const res = await api.post('repo/gc', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers,
            transform: (res)=>{
                return {
                    err: res.Error ? new Error(res.Error) : null,
                    cid: (res.Key || {})['/'] ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(res.Key['/']) : null
                };
            }
        });
        yield* res.ndjson();
    }
    return gc;
});
}}),
"[project]/node_modules/ipfs-http-client/src/repo/stat.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStat": (()=>createStat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createStat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RepoAPI["stat"]}
   */ async function stat(options = {}) {
        const res = await api.post('repo/stat', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        const data = await res.json();
        return {
            numObjects: BigInt(data.NumObjects),
            repoSize: BigInt(data.RepoSize),
            repoPath: data.RepoPath,
            version: data.Version,
            storageMax: BigInt(data.StorageMax)
        };
    }
    return stat;
});
}}),
"[project]/node_modules/ipfs-http-client/src/repo/version.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createVersion": (()=>createVersion)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createVersion = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RepoAPI["version"]}
   */ async function version(options = {}) {
        const res = await (await api.post('repo/version', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        })).json();
        return res.Version;
    }
    return version;
});
}}),
"[project]/node_modules/ipfs-http-client/src/repo/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createRepo": (()=>createRepo)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$gc$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/repo/gc.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/repo/stat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$version$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/repo/version.js [client] (ecmascript)");
;
;
;
function createRepo(config) {
    return {
        gc: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$gc$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGc"])(config),
        stat: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config),
        version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$version$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createVersion"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/stats/bw.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createBw": (()=>createBw)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createBw = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {StatsAPI["bw"]}
   */ async function* bw(options = {}) {
        const res = await api.post('stats/bw', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers,
            transform: (stats)=>({
                    totalIn: BigInt(stats.TotalIn),
                    totalOut: BigInt(stats.TotalOut),
                    rateIn: parseFloat(stats.RateIn),
                    rateOut: parseFloat(stats.RateOut)
                })
        });
        yield* res.ndjson();
    }
    return bw;
});
}}),
"[project]/node_modules/ipfs-http-client/src/stats/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStats": (()=>createStats)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/stat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/repo/stat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stats$2f$bw$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/stats/bw.js [client] (ecmascript)");
;
;
;
function createStats(config) {
    return {
        bitswap: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config),
        repo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(config),
        bw: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stats$2f$bw$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createBw"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/swarm/addrs.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAddrs": (()=>createAddrs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/peer-id/dist/src/index.js [client] (ecmascript)");
;
;
;
;
const createAddrs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {SwarmAPI["addrs"]}
   */ async function addrs(options = {}) {
        const res = await api.post('swarm/addrs', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        /** @type {{ Addrs: Record<string, string[]> }} */ const { Addrs } = await res.json();
        return Object.keys(Addrs).map((id)=>({
                id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(id),
                addrs: (Addrs[id] || []).map((a)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(a))
            }));
    }
    return addrs;
});
}}),
"[project]/node_modules/ipfs-http-client/src/swarm/connect.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createConnect": (()=>createConnect)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createConnect = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {SwarmAPI["connect"]}
   */ async function connect(addr, options = {}) {
        const res = await api.post('swarm/connect', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: addr,
                ...options
            }),
            headers: options.headers
        });
        const { Strings } = await res.json();
        return Strings || [];
    }
    return connect;
});
}}),
"[project]/node_modules/ipfs-http-client/src/swarm/disconnect.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createDisconnect": (()=>createDisconnect)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createDisconnect = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {SwarmAPI["disconnect"]}
   */ async function disconnect(addr, options = {}) {
        const res = await api.post('swarm/disconnect', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: addr,
                ...options
            }),
            headers: options.headers
        });
        const { Strings } = await res.json();
        return Strings || [];
    }
    return disconnect;
});
}}),
"[project]/node_modules/ipfs-http-client/src/swarm/local-addrs.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLocalAddrs": (()=>createLocalAddrs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createLocalAddrs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {SwarmAPI["localAddrs"]}
   */ async function localAddrs(options = {}) {
        const res = await api.post('swarm/addrs/local', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        /** @type {{ Strings: string[] }} */ const { Strings } = await res.json();
        return (Strings || []).map((a)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(a));
    }
    return localAddrs;
});
}}),
"[project]/node_modules/ipfs-http-client/src/swarm/peers.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPeers": (()=>createPeers)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/peer-id/dist/src/index.js [client] (ecmascript)");
;
;
;
;
const createPeers = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {SwarmAPI["peers"]}
   */ async function peers(options = {}) {
        const res = await api.post('swarm/peers', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */ const { Peers } = await res.json();
        return (Peers || []).map((peer)=>{
            return {
                addr: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(peer.Addr),
                peer: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(peer.Peer),
                muxer: peer.Muxer,
                latency: peer.Latency,
                streams: peer.Streams,
                direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'
            };
        });
    }
    return peers;
});
}}),
"[project]/node_modules/ipfs-http-client/src/swarm/index.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createSwarm": (()=>createSwarm)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$addrs$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/addrs.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$connect$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/connect.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$disconnect$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/disconnect.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$local$2d$addrs$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/local-addrs.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$peers$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/peers.js [client] (ecmascript)");
;
;
;
;
;
function createSwarm(config) {
    return {
        addrs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$addrs$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAddrs"])(config),
        connect: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$connect$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createConnect"])(config),
        disconnect: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$disconnect$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createDisconnect"])(config),
        localAddrs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$local$2d$addrs$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLocalAddrs"])(config),
        peers: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$peers$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPeers"])(config)
    };
}
}}),
"[project]/node_modules/ipfs-http-client/src/add-all.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAddAll": (()=>createAddAll)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multipart-request.browser.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/abort-signal.js [client] (ecmascript)");
;
;
;
;
;
;
const createAddAll = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["addAll"]}
   */ async function* addAll(source, options = {}) {
        // allow aborting requests on body errors
        const controller = new AbortController();
        const signal = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$abort$2d$signal$2e$js__$5b$client$5d$__$28$ecmascript$29$__["abortSignal"])(controller.signal, options.signal);
        const { headers, body, total, parts } = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multipart$2d$request$2e$browser$2e$js__$5b$client$5d$__$28$ecmascript$29$__["multipartRequest"])(source, controller, options.headers);
        // In browser response body only starts streaming once upload is
        // complete, at which point all the progress updates are invalid. If
        // length of the content is computable we can interpret progress from
        // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`
        // in which case we disable progress updates to be written out.
        const [progressFn, onUploadProgress] = typeof options.progress === 'function' ? createProgressHandler(total, parts, options.progress) : [
            undefined,
            undefined
        ];
        const res = await api.post('add', {
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                'stream-channels': true,
                ...options,
                progress: Boolean(progressFn)
            }),
            onUploadProgress,
            signal,
            headers,
            body
        });
        for await (let file of res.ndjson()){
            file = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(file);
            if (file.hash !== undefined) {
                yield toCoreInterface(file);
            } else if (progressFn) {
                progressFn(file.bytes || 0, file.name);
            }
        }
    }
    return addAll;
});
/**
 * Returns simple progress callback when content length isn't computable or a
 * progress event handler that calculates progress from upload progress events.
 *
 * @param {number} total
 * @param {{name:string, start:number, end:number}[]|null} parts
 * @param {IPFSCoreAddProgressFn} progress
 * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}
 */ const createProgressHandler = (total, parts, progress)=>parts ? [
        undefined,
        createOnUploadProgress(total, parts, progress)
    ] : [
        progress,
        undefined
    ];
/**
 * Creates a progress handler that interpolates progress from upload progress
 * events and total size of the content that is added.
 *
 * @param {number} size - actual content size
 * @param {{name:string, start:number, end:number}[]} parts
 * @param {IPFSCoreAddProgressFn} progress
 * @returns {IPFSUtilsHttpUploadProgressFn}
 */ const createOnUploadProgress = (size, parts, progress)=>{
    let index = 0;
    const count = parts.length;
    return ({ loaded, total })=>{
        // Derive position from the current progress.
        const position = Math.floor(loaded / total * size);
        while(index < count){
            const { start, end, name } = parts[index];
            // If within current part range report progress and break the loop
            if (position < end) {
                progress(position - start, name);
                break;
            // If passed current part range report final byte for the chunk and
            // move to next one.
            } else {
                progress(end - start, name);
                index += 1;
            }
        }
    };
};
/**
 * @param {object} input
 * @param {string} input.name
 * @param {string} input.hash
 * @param {string} input.size
 * @param {string} [input.mode]
 * @param {number} [input.mtime]
 * @param {number} [input.mtimeNsecs]
 */ function toCoreInterface({ name, hash, size, mode, mtime, mtimeNsecs }) {
    /** @type {AddResult} */ const output = {
        path: name,
        cid: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(hash),
        size: parseInt(size)
    };
    if (mode != null) {
        output.mode = parseInt(mode, 8);
    }
    if (mtime != null) {
        output.mtime = {
            secs: mtime,
            nsecs: mtimeNsecs || 0
        };
    }
    return output;
}
}}),
"[project]/node_modules/ipfs-http-client/src/add.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createAdd": (()=>createAdd)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/add-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/it-last/dist/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$files$2f$normalise$2d$input$2d$single$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/files/normalise-input-single.js [client] (ecmascript)");
;
;
;
;
function createAdd(options) {
    const all = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAddAll"])(options);
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])(()=>{
        /**
     * @type {RootAPI["add"]}
     */ async function add(input, options = {}) {
            // @ts-expect-error - last may return undefined if source is empty
            return await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$it$2d$last$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(all((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$files$2f$normalise$2d$input$2d$single$2e$js__$5b$client$5d$__$28$ecmascript$29$__["normaliseInput"])(input), options));
        }
        return add;
    })(options);
}
}}),
"[project]/node_modules/ipfs-http-client/src/cat.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createCat": (()=>createCat)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createCat = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["cat"]}
   */ async function* cat(path, options = {}) {
        const res = await api.post('cat', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path.toString(),
                ...options
            }),
            headers: options.headers
        });
        yield* res.iterator();
    }
    return cat;
});
}}),
"[project]/node_modules/ipfs-http-client/src/commands.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createCommands": (()=>createCommands)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createCommands = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["commands"]}
   */ const commands = async (options = {})=>{
        const res = await api.post('commands', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        return res.json();
    };
    return commands;
});
}}),
"[project]/node_modules/ipfs-http-client/src/dns.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createDns": (()=>createDns)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createDns = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["dns"]}
   */ const dns = async (domain, options = {})=>{
        const res = await api.post('dns', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: domain,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        return data.Path;
    };
    return dns;
});
}}),
"[project]/node_modules/ipfs-http-client/src/get-endpoint-config.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGetEndpointConfig": (()=>createGetEndpointConfig)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
;
const createGetEndpointConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    return ()=>{
        const url = new URL(api.opts.base || '');
        return {
            host: url.hostname,
            port: url.port,
            protocol: url.protocol,
            pathname: url.pathname,
            'api-path': url.pathname
        };
    };
});
}}),
"[project]/node_modules/ipfs-http-client/src/get.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createGet": (()=>createGet)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createGet = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["get"]}
   */ async function* get(path, options = {}) {
        /** @type {Record<string, any>} */ const opts = {
            arg: `${path instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(path) : path}`,
            ...options
        };
        if (opts.compressionLevel) {
            opts['compression-level'] = opts.compressionLevel;
            delete opts.compressionLevel;
        }
        const res = await api.post('get', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(opts),
            headers: options.headers
        });
        yield* res.iterator();
    }
    return get;
});
}}),
"[project]/node_modules/ipfs-http-client/src/id.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createId": (()=>createId)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@libp2p/peer-id/dist/src/index.js [client] (ecmascript)");
;
;
;
;
;
const createId = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["id"]}
   */ async function id(options = {}) {
        const res = await api.post('id', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: options.peerId ? options.peerId.toString() : undefined,
                ...options
            }),
            headers: options.headers
        });
        const data = await res.json();
        const output = {
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(data)
        };
        output.id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$libp2p$2f$peer$2d$id$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["peerIdFromString"])(output.id);
        if (output.addresses) {
            output.addresses = output.addresses.map((/** @type {string} */ ma)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["multiaddr"])(ma));
        }
        // @ts-expect-error server output is not typed
        return output;
    }
    return id;
});
}}),
"[project]/node_modules/ipfs-http-client/src/is-online.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createIsOnline": (()=>createIsOnline)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$id$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/id.js [client] (ecmascript)");
;
const createIsOnline = (options)=>{
    const id = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$id$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createId"])(options);
    /**
   * @type {RootAPI["isOnline"]}
   */ async function isOnline(options = {}) {
        const res = await id(options);
        return Boolean(res && res.addresses && res.addresses.length);
    }
    return isOnline;
};
}}),
"[project]/node_modules/ipfs-http-client/src/ls.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createLs": (()=>createLs)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/stat.js [client] (ecmascript)");
;
;
;
;
const createLs = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api, opts)=>{
    /**
   * @type {RootAPI["ls"]}
   */ async function* ls(path, options = {}) {
        const pathStr = `${path instanceof Uint8Array ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].decode(path) : path}`;
        /**
     * @param {*} link
     */ async function mapLink(link) {
            let hash = link.Hash;
            if (hash.includes('/')) {
                // the hash is a path, but we need the CID
                const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`;
                const stats = await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$stat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStat"])(opts)(ipfsPath);
                hash = stats.cid;
            } else {
                hash = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["CID"].parse(hash);
            }
            /** @type {import('ipfs-core-types/src/root').IPFSEntry} */ const entry = {
                name: link.Name,
                path: pathStr + (link.Name ? `/${link.Name}` : ''),
                size: link.Size,
                cid: hash,
                type: typeOf(link)
            };
            if (link.Mode) {
                entry.mode = parseInt(link.Mode, 8);
            }
            if (link.Mtime !== undefined && link.Mtime !== null) {
                entry.mtime = {
                    secs: link.Mtime
                };
                if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {
                    entry.mtime.nsecs = link.MtimeNsecs;
                }
            }
            return entry;
        }
        const res = await api.post('ls', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: pathStr,
                ...options
            }),
            headers: options.headers
        });
        for await (let result of res.ndjson()){
            result = result.Objects;
            if (!result) {
                throw new Error('expected .Objects in results');
            }
            result = result[0];
            if (!result) {
                throw new Error('expected one array in results.Objects');
            }
            const links = result.Links;
            if (!Array.isArray(links)) {
                throw new Error('expected one array in results.Objects[0].Links');
            }
            if (!links.length) {
                // no links, this is a file, yield a single result
                yield mapLink(result);
                return;
            }
            yield* links.map(mapLink);
        }
    }
    return ls;
});
/**
 * @param {any} link
 */ function typeOf(link) {
    switch(link.Type){
        case 1:
        case 5:
            return 'dir';
        case 2:
            return 'file';
        default:
            return 'file';
    }
}
}}),
"[project]/node_modules/ipfs-http-client/src/mount.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createMount": (()=>createMount)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createMount = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["mount"]}
   */ async function mount(options = {}) {
        const res = await api.post('dns', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json());
    }
    return mount;
});
}}),
"[project]/node_modules/ipfs-http-client/src/ping.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createPing": (()=>createPing)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createPing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["ping"]}
   */ async function* ping(peerId, options = {}) {
        const res = await api.post('ping', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: `${peerId}`,
                ...options
            }),
            headers: options.headers,
            transform: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"]
        });
        yield* res.ndjson();
    }
    return ping;
});
}}),
"[project]/node_modules/ipfs-http-client/src/resolve.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createResolve": (()=>createResolve)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createResolve = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["resolve"]}
   */ async function resolve(path, options = {}) {
        const res = await api.post('resolve', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])({
                arg: path,
                ...options
            }),
            headers: options.headers
        });
        const { Path } = await res.json();
        return Path;
    }
    return resolve;
});
}}),
"[project]/node_modules/ipfs-http-client/src/start.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStart": (()=>createStart)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/err-code/index.js [client] (ecmascript)");
;
;
const createStart = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["start"]}
   */ const start = async (options = {})=>{
        throw (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$err$2d$code$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["default"])(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED');
    };
    return start;
});
}}),
"[project]/node_modules/ipfs-http-client/src/stop.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createStop": (()=>createStop)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
const createStop = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["stop"]}
   */ async function stop(options = {}) {
        const res = await api.post('shutdown', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        await res.text();
    }
    return stop;
});
}}),
"[project]/node_modules/ipfs-http-client/src/version.js [client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({
    "createVersion": (()=>createVersion)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/object-to-camel.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/configure.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/lib/to-url-search-params.js [client] (ecmascript)");
;
;
;
const createVersion = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$configure$2e$js__$5b$client$5d$__$28$ecmascript$29$__["configure"])((api)=>{
    /**
   * @type {RootAPI["version"]}
   */ async function version(options = {}) {
        const res = await api.post('version', {
            signal: options.signal,
            searchParams: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$to$2d$url$2d$search$2d$params$2e$js__$5b$client$5d$__$28$ecmascript$29$__["toUrlSearchParams"])(options),
            headers: options.headers
        });
        // @ts-expect-error server output is not typed
        return {
            ...(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$lib$2f$object$2d$to$2d$camel$2e$js__$5b$client$5d$__$28$ecmascript$29$__["objectToCamel"])(await res.json()),
            'ipfs-http-client': '1.0.0'
        };
    }
    return version;
});
}}),
"[project]/node_modules/ipfs-http-client/src/index.js [client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
/* eslint-env browser */ __turbopack_context__.s({
    "create": (()=>create),
    "globSource": (()=>globSource)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multibases$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multibases.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multicodecs$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multicodecs.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multihashes$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multihashes.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-pb/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-pb/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$cbor$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-cbor/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$json$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-json/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dag$2d$jose$2f$lib$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/dag-jose/lib/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$hashes$2f$identity$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/hashes/identity.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$basics$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/basics.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$basics$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/basics.js [client] (ecmascript) <locals>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/diag/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/log/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$refs$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/refs/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/repo/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stats$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/stats/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/add.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/add-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$cat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/cat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$commands$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/commands.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dns$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dns.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$get$2d$endpoint$2d$config$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/get-endpoint-config.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$id$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/id.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$is$2d$online$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/is-online.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$mount$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/mount.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$ping$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/ping.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/resolve.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$start$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/start.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stop$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/stop.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$version$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/version.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$files$2f$url$2d$source$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-utils/src/files/url-source.js [client] (ecmascript)");
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
function create(options = {}) {
    /**
   * @type {BlockCodec}
   */ const id = {
        name: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$hashes$2f$identity$2e$js__$5b$client$5d$__$28$ecmascript$29$__["identity"].name,
        code: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$hashes$2f$identity$2e$js__$5b$client$5d$__$28$ecmascript$29$__["identity"].code,
        encode: (id)=>id,
        decode: (id)=>id
    };
    /** @type {MultibaseCodec[]} */ const multibaseCodecs = Object.values(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$basics$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["bases"]);
    (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach((base)=>multibaseCodecs.push(base));
    const multibases = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multibases$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Multibases"]({
        bases: multibaseCodecs,
        loadBase: options.ipld && options.ipld.loadBase
    });
    /** @type {BlockCodec[]} */ const blockCodecs = Object.values(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$basics$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["codecs"]);
    [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$cbor$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$json$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dag$2d$jose$2f$lib$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__,
        id
    ].concat(options.ipld && options.ipld.codecs || []).forEach((codec)=>blockCodecs.push(codec));
    const multicodecs = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multicodecs$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Multicodecs"]({
        codecs: blockCodecs,
        loadCodec: options.ipld && options.ipld.loadCodec
    });
    /** @type {MultihashHasher[]} */ const multihashHashers = Object.values(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$basics$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__["hashes"]);
    (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach((hasher)=>multihashHashers.push(hasher));
    const multihashes = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multihashes$2e$js__$5b$client$5d$__$28$ecmascript$29$__["Multihashes"]({
        hashers: multihashHashers,
        loadHasher: options.ipld && options.ipld.loadHasher
    });
    /** @type {IPFSHTTPClient} */ const client = {
        add: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAdd"])(options),
        addAll: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createAddAll"])(options),
        bitswap: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createBitswap"])(options),
        block: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createBlock"])(options),
        bootstrap: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createBootstrap"])(options),
        cat: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$cat$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createCat"])(options),
        commands: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$commands$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createCommands"])(options),
        config: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createConfig"])(options),
        dag: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createDag"])(multicodecs, options),
        dht: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createDht"])(options),
        diag: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createDiag"])(options),
        dns: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dns$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createDns"])(options),
        files: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createFiles"])(options),
        get: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGet"])(options),
        getEndpointConfig: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$get$2d$endpoint$2d$config$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createGetEndpointConfig"])(options),
        id: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$id$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createId"])(options),
        isOnline: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$is$2d$online$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createIsOnline"])(options),
        key: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createKey"])(options),
        log: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLog"])(options),
        ls: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createLs"])(options),
        mount: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$mount$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createMount"])(options),
        name: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createName"])(options),
        object: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createObject"])(multicodecs, options),
        pin: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPin"])(options),
        ping: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$ping$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPing"])(options),
        pubsub: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createPubsub"])(options),
        refs: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$refs$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRefs"])(options),
        repo: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createRepo"])(options),
        resolve: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createResolve"])(options),
        start: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$start$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStart"])(options),
        stats: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stats$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStats"])(options),
        stop: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stop$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createStop"])(options),
        swarm: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createSwarm"])(options),
        version: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$version$2e$js__$5b$client$5d$__$28$ecmascript$29$__["createVersion"])(options),
        bases: multibases,
        codecs: multicodecs,
        hashers: multihashes
    };
    return client;
}
;
;
;
const globSource = void 0;
}}),
"[project]/node_modules/ipfs-http-client/src/index.js [client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { g: global, __dirname } = __turbopack_context__;
{
__turbopack_context__.s({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multibases$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multibases.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multicodecs$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multicodecs.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$core$2d$utils$2f$src$2f$multihashes$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-core-utils/src/multihashes.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$pb$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-pb/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$cbor$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-cbor/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$ipld$2f$dag$2d$json$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/@ipld/dag-json/src/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dag$2d$jose$2f$lib$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/dag-jose/lib/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$hashes$2f$identity$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/hashes/identity.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$basics$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/basics.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bitswap$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bitswap/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$block$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/block/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$bootstrap$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/bootstrap/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$config$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/config/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dag$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dag/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dht$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dht/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$diag$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/diag/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$files$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/files/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$key$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/key/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$log$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/log/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$name$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/name/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$object$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/object/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pin$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pin/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$pubsub$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/pubsub/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$refs$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/refs/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$repo$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/repo/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stats$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/stats/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$swarm$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/swarm/index.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/add.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$add$2d$all$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/add-all.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$cat$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/cat.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$commands$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/commands.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$dns$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/dns.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$get$2d$endpoint$2d$config$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/get-endpoint-config.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$get$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/get.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$id$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/id.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$is$2d$online$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/is-online.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$ls$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/ls.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$mount$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/mount.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$ping$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/ping.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$resolve$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/resolve.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$start$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/start.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$stop$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/stop.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$version$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/version.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$multiformats$2f$src$2f$cid$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/multiformats/src/cid.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$multiformats$2f$multiaddr$2f$dist$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_context__.i("[project]/node_modules/@multiformats/multiaddr/dist/src/index.js [client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$utils$2f$src$2f$files$2f$url$2d$source$2e$js__$5b$client$5d$__$28$ecmascript$29$__ = __turbopack_context__.i("[project]/node_modules/ipfs-utils/src/files/url-source.js [client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ipfs$2d$http$2d$client$2f$src$2f$index$2e$js__$5b$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_context__.i("[project]/node_modules/ipfs-http-client/src/index.js [client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_ipfs-http-client_src_0d068f04._.js.map